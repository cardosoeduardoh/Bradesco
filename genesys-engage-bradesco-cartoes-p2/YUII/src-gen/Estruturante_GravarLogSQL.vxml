<?xml version="1.0" encoding="utf-8"?>
<vxml version="2.1" xml:lang="pt-BR"
		xmlns="http://www.w3.org/2001/vxml"
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xmlns:gvp="http://www.genesyslab.com/2006/vxml21-extension">

	
	<!-- VXML code generated by Composer 8.1.550.08 -->
	<!-- Diagram created by Composer: Composer 8.1.550.08 -->
	<!-- Project version: 8.1.550.08 -->
	<!-- Diagram version: 1.0 CreatedOn:  -->
	<!-- Application Author:  -->
	<!-- Release Mode: false -->

	<!-- Global Scripts includes -->
	<script src="../include/common.js" />
	<script src="../include/ctic.js" />
	<script src="../include/json.js" />
	<script src="../include/DataAccess.js" />

	<!-- Global Vars declarations -->
	<script>
		var AppState = new Object();
		AppState.System = new Object();
		AppState.System.RetainInputTypeVariableDefaultValue = false;
		AppState.CallUUID = session.connection.uuid;
		AppState.ANI = getANI();
		AppState.DNIS = getDNIS();
		AppState.USE_LCASE_USERDATAKEY = initSystemTypeVariable('USE_LCASE_USERDATAKEY',0);
  		
  		if (session.connection.protocol.sip.headers != undefined &amp;&amp;
			    session.connection.protocol.sip.headers['x-genesys-gvp-session-id']){
			AppState.GVPSessionID = session.connection.protocol.sip.headers['x-genesys-gvp-session-id'];
		} else {
			AppState.GVPSessionID = 'undefined';
		}
  			
		
		AppState.ap_url = '';
		AppState.APP_ASR_LANGUAGE = initSystemTypeVariable('APP_ASR_LANGUAGE','pt-BR');
		AppState.APP_LANGUAGE = initSystemTypeVariable('APP_LANGUAGE','pt-BR');
		AppState.COMPOSER_WSSTUBBING = initSystemTypeVariable('COMPOSER_WSSTUBBING','0');
		AppState.EnableFCR = initSystemTypeVariable('EnableFCR',true);
		AppState.EnableReports = initSystemTypeVariable('EnableReports',false);
		AppState.EnableSNMP = initSystemTypeVariable('EnableSNMP',false);
		AppState.GRAMMARFILEDIR = initSystemTypeVariable('GRAMMARFILEDIR','../Resources/Grammars');
		AppState.LAST_EVENT_ELEMENT = initSystemTypeVariable('LAST_EVENT_ELEMENT','undefined');
		AppState.LAST_EVENT_LINE = initSystemTypeVariable('LAST_EVENT_LINE','undefined');
		AppState.LAST_EVENT_MSG = initSystemTypeVariable('LAST_EVENT_MSG','undefined');
		AppState.LAST_EVENT_NAME = initSystemTypeVariable('LAST_EVENT_NAME','undefined');
		AppState.LAST_EVENT_URL = initSystemTypeVariable('LAST_EVENT_URL','undefined');
		AppState.OCS_Record = initSystemTypeVariable('OCS_Record',getCallflowOCSRecord());
		AppState.OCS_RecordURI = initSystemTypeVariable('OCS_RecordURI',getCallflowRecordURI());
		AppState.OCS_URI = initSystemTypeVariable('OCS_URI',getCallflowOCSURI());
		AppState.PREV_APP_ASR_LANGUAGE = initSystemTypeVariable('PREV_APP_ASR_LANGUAGE','undefined');
		AppState.PREV_APP_LANGUAGE = initSystemTypeVariable('PREV_APP_LANGUAGE','undefined');
		AppState.SCRIPTSDIR = initSystemTypeVariable('SCRIPTSDIR','../Scripts');
		AppState.VOXFILEDIR = initSystemTypeVariable('VOXFILEDIR','../Resources/Prompts');
		AppState.ap_nomeServico = 'GravarLogSQL';
		AppState.objJsonRequest = {};
		AppState.objResponseAPI = {};
		AppState.str_URI_base = '';
		AppState.str_URI_final = '';
		AppState.str_auth = '';
		AppState.userAPI = '';
		AppState.Content_Type = '';
		AppState.ipAddress = '';
		AppState.str_dataExpiracao = '';
		AppState.str_timeOut = '';
		AppState.objNavegacao = {};
		AppState.VAR_timestampInicio = '';
		AppState.CpfCliente = '';
		AppState.versao = '';
		AppState.CartaoCliente = '';
	</script>

		
	<!-- Global Scripts -->
	<script srcexpr="AppState.VOXFILEDIR + '/PromptSwitch.js'" />
	<script srcexpr="AppState.VOXFILEDIR + '/pt-BR/pt-BR.js'" />
	<script>var f = new Format();</script>
	<script srcexpr="AppState.SCRIPTSDIR + '/' + 'funcoes.js'" />
	<script srcexpr="AppState.SCRIPTSDIR + '/' + 'funcoesDataHora.js'" />
	<script srcexpr="AppState.SCRIPTSDIR + '/' + 'funcoesMenus.js'" />
	<script srcexpr="AppState.SCRIPTSDIR + '/' + 'funcoesFrases.js'" />

	
	<script srcexpr="AppState.VOXFILEDIR + '/pt-BR/customprompts.js'" />
	
	
	<!-- Global Properties declarations -->
	<property name="com.genesyslab.logtoasr" value="false" />   	
	<property name="com.genesyslab.loglevel" value="5" />

	<!-- Metadata information -->
	<meta name="com.genesyslab.studio.resourcePath" content="/Callflows/Estruturante_GravarLogSQL.callflow"/>

	<!-- Global links -->
	<form>	
		<!-- VAR Parent Action Param -->
		<var name="varActionParentId" expr="''"/>
		<var name="io_dados" expr="''"/>
		<block name="paramAssignment">
			<assign name="AppState.io_dados" expr="io_dados"/>
		</block>
		<block name="varAction">
			<if cond="varActionParentId==''">
				<log label="com.genesyslab.var.ActionStart" gvp:cond="AppState.EnableReports">Estruturante_GravarLogSQL</log>
			<else/>
				<log label="com.genesyslab.var.ActionStart" gvp:cond="AppState.EnableReports">Estruturante_GravarLogSQL|parentID=<value expr="varActionParentId"/></log>
			</if>
		</block>
		<block>
			<log expr="'Running Estruturante_GravarLogSQL workflow.'"/>
			<log expr="'Code Generated by Composer: 8.1.550.08.'"/>
			<log expr="'Diagram created/upgraded by Composer: Composer 8.1.550.08.'"/>
			<log expr="'Project version: 8.1.550.08.'"/>
			<log expr="'Diagram version: 1.0 CreatedOn: .'"/>
			<goto next="#Entry1_Estruturante_GravarLogSQL" />
		</block>
	</form>
	<!-- This is the Entry block -->
	<form id="Entry1_Estruturante_GravarLogSQL">
		<block name="Entry">
			<goto next="#LogInicioServico" />
		</block>
	</form>
    <catch event=".">
    <return eventexpr="_event" messageexpr="_message"/> 
    </catch>

	<!-- This is the Exit block -->
	<form id="Exit1_Estruturante_GravarLogSQL">
		<block>
			<log gvp:level="1" label="com.genesyslab.var.ActionEnd" gvp:cond="AppState.EnableReports">Estruturante_GravarLogSQL|UNKNOWN</log>
			<var name="io_dados" expr="AppState.io_dados"/>
			<return namelist="io_dados"/>
  		</block>
	</form>

	<!-- This is the Log block -->
	<form id="LogInicioServico">
		<block>
			<log gvp:level="1">
				<value expr="'############## Inicio Servico: ' + AppState.ap_nomeServico + '##############'"/>
			</log>
    	</block>
    	<block>
    		<goto next="#GravarLogSQL_Monta_URI" />
    	</block>
	</form>

	<!-- This is the Assign block -->
	<form id="GravarLogSQL_Monta_URI">
		<block>
			<script>
				try {
						
						//__Log('###########AppState.io_dados.UR80 : ' + JSON.stringify(AppState.io_dados['UR80'])); 
						
						if(AppState.io_dados.sCPFTitular != undefined){
						       AppState.CpfCliente = AppState.io_dados.sCPFTitular.substring(0,11);
						       //AppState.CpfCliente =  AppState.io_dados.sCPFTitular.substring(0,4)+'xxxx' + AppState.io_dados.sCPFTitular.substring(8,11);
						}else{
						        AppState.CpfCliente =  '';
						}
						
						if(AppState.io_dados.sCartao != undefined){
						      AppState.CartaoCliente = AppState.io_dados.sCartao;
						}else{
						       AppState.CartaoCliente =  '';
						}
						
					
						
						//Timestamp navegacao
						var dataAtual = getDataAtual();
					   	AppState.VAR_timestampInicio = dataAtual.substring(0,23).replace('T',' '); // &quot;9999-12-31 23:59:59.999&quot;
					   	
					   	
						
						AppState.str_URI_final = AppState.io_dados.opm.url_gravarlogsql;
						
					 	AppState.str_timeOut = parseInt(AppState.io_dados.opm.timeout, 10);
					
						var code = AppState.io_dados.opm.central;
						AppState.versao =  AppState.io_dados.opm.estruturanteversao;
					 
					 	//JSON Request
						AppState.objJsonRequest = {};
						AppState.objJsonRequest.mnemonico = &quot;LOGSQL&quot;;
						AppState.objJsonRequest.versaoServico = AppState.versao;//0;
						AppState.objJsonRequest.timestampRequisicao = AppState.VAR_timestampInicio;
						AppState.objJsonRequest.timeoutRequisicao = AppState.str_timeOut;
						AppState.objJsonRequest.codigoCentral = code;
						AppState.objJsonRequest.tipoAtendimento = &quot;1&quot;;
						AppState.objJsonRequest.nsuSessao = AppState.io_dados.nsuSessao;
						AppState.objJsonRequest.codigoServico = &quot;gravSql&quot;;
						AppState.objJsonRequest.foneOrigemA =  AppState.io_dados['ani'].substring(2, 11);
						AppState.objJsonRequest.dhLigacao = AppState.io_dados['horaInicioChamada'];
						AppState.objJsonRequest.nrFoneDestinoB = AppState.io_dados['dnis'].substring(AppState.io_dados['dnis'].length - 4); 
						if ( AppState.io_dados['sORGCartao'] != null &amp;&amp; AppState.io_dados['sORGCartao'] != &quot;&quot; &amp;&amp; AppState.io_dados['sORGCartao'] != &quot;   &quot; ) 
							AppState.objJsonRequest.cdOrg = AppState.io_dados['sORGCartao'];
						else
							AppState.objJsonRequest.cdOrg = '';
						if ( AppState.io_dados['sLogoCartao'] != null &amp;&amp; AppState.io_dados['sLogoCartao'] != &quot;&quot; &amp;&amp; AppState.io_dados['sLogoCartao'] != &quot;   &quot; ) 
							AppState.objJsonRequest.cdLogo = AppState.io_dados['sLogoCartao'];
						else
							AppState.objJsonRequest.cdLogo = '';	
							AppState.objJsonRequest.nrCartaoCliente = AppState.CartaoCliente;
						AppState.objJsonRequest.nrCpfCliente = AppState.CpfCliente;
						if ( AppState.io_dados['UR80']['AplCdBloqueio'] != null &amp;&amp; AppState.io_dados['UR80']['AplCdBloqueio'] != &quot;&quot; &amp;&amp; AppState.io_dados['UR80']['AplCdBloqueio'] != &quot; &quot; ) 
							AppState.objJsonRequest.cdBloqueioCartao = AppState.io_dados['UR80']['AplCdBloqueio'];
						else
							AppState.objJsonRequest.cdBloqueioCartao = '';
						if ( AppState.io_dados['UR80']['AplCodRetorno'] != null &amp;&amp; AppState.io_dados['UR80']['AplCodRetorno'] != &quot;&quot; &amp;&amp; AppState.io_dados['UR80']['AplCodRetorno'] != &quot;   &quot; ) 
							AppState.objJsonRequest.cdRetornoTransacaoInicial = AppState.io_dados['UR80']['AplCodRetorno'];
						else
							AppState.objJsonRequest.cdRetornoTransacaoInicial = '';
						if ( AppState.io_dados['UR80']['AplDiasAtraso'] != null &amp;&amp; AppState.io_dados['UR80']['AplDiasAtraso'] != &quot;&quot; &amp;&amp; AppState.io_dados['UR80']['AplDiasAtraso'] != &quot;   &quot; ) 
							AppState.objJsonRequest.nrDiasAtraso = AppState.io_dados['UR80']['AplDiasAtraso'];
						else
							AppState.objJsonRequest.nrDiasAtraso = ''; 
						AppState.objJsonRequest.dsSequenciaMenu = AppState.io_dados['LogTick']; // Verificar info
						if (AppState.io_dados['Balanceamento'] != null &amp;&amp; AppState.io_dados['Balanceamento']['vdn'] != null &amp;&amp;  AppState.io_dados['Balanceamento']['vdn'] != &quot;&quot;)
							AppState.objJsonRequest.nrVdnDerivacao =  AppState.io_dados['Balanceamento']['vdn'];
						else
							AppState.objJsonRequest.nrVdnDerivacao = &quot;&quot;;
						AppState.objJsonRequest.cdFinalizacaoChamada = AppState.io_dados.CodDesliga//'402'; // Verificar info
						AppState.objJsonRequest.hrFinalizacaoChamada = formataDataAtual('hh') + ':' + formataDataAtual('mm') + ':' + formataDataAtual('ss'); 
						if ( AppState.io_dados['UR80']['AplCondicaoVencto'] != null &amp;&amp; AppState.io_dados['UR80']['AplCondicaoVencto'] != &quot;&quot; &amp;&amp; AppState.io_dados['UR80']['AplCondicaoVencto'] != &quot; &quot; ) 
							AppState.objJsonRequest.cdCondicaoCartao = AppState.io_dados['UR80']['AplCondicaoVencto'];
						else
							AppState.objJsonRequest.cdCondicaoCartao = ''; 
						AppState.objJsonRequest.nrDddOrigemA = AppState.io_dados['ani'].substring(0, 2); 
						AppState.objJsonRequest.nrSerialTlk = '    '; 
					
					
					
						__Log('########### objJsonRequest: ' + JSON.stringify(AppState.objJsonRequest));
						__Log('########### str_URI_final: ' + JSON.stringify(AppState.str_URI_final));
						__Log('########### str_timeOut: ' + JSON.stringify(AppState.str_timeOut));
						__Log('###########AppState.versao: ' + JSON.stringify(AppState.versao));
					
					} catch (error) {
						__Log(&quot;##### Error(GravarLogTrace_Setar_Variaveis): &quot; + error);
					}
			</script>	
			<goto next="#WR_GravarLogSQL" />
		</block>
	</form>

	<!-- This is the WebRequest block -->
	<form id="WR_GravarLogSQL">
	  <block>
		<script>
		    var requestObj = new Object();
			requestObj['WebUrl'] = AppState.str_URI_final;
			requestObj['Protocol'] = 'post';
			requestObj['Enctype'] = 'application/json';
			requestObj['VerifyJSON'] = true;
		    requestObj['JsonContent'] = AppState.objJsonRequest;
			requestObj['AuthenAccess'] = false;
		
		
            requestObj['Timeout'] = AppState.str_timeOut;
            
        
			requestObj['enableProxy']=false;
			requestObj['proxyHost']='';
			requestObj['proxyPort']=80;
			requestObj['proxyUserName']='';
			requestObj['proxyPassword']='';
			requestObj['SSLauthenticationType'] = 'Anonymous';
			requestObj['SSLcertificateAlias'] = '';
			requestObj['SSLKeyStoreLocation'] = '';
			requestObj['SSLcertifcateStoreName'] = '';
			requestObj['SSLkeyAlgorithm'] = 'DSA';
			requestObj['SSLkeyStorePassword'] = '';
			requestObj['SSLprivateKeyPassword'] = '';
		</script>
		<data name="WR_GravarLogSQLResponse" enctype="application/json" 
			gvp:contentexpr="requestObj" method="post"
			src="../include/getWebRequestData.jsp" />	    
		<if cond="typeof WR_GravarLogSQLResponse.errorMsg == 'undefined'">			
		    <assign name="AppState.objResponseAPI" expr="WR_GravarLogSQLResponse" />	    
		    <goto next="#GravarLogSQL_Parse" />
		<else/>
		<if cond="WR_GravarLogSQLResponse.throwServerException">
        	<throw event="error.com.genesyslab.composer.servererror" messageexpr="WR_GravarLogSQLResponse.errorMsg" />
        <else/>			
		    <assign name="AppState.objResponseAPI" expr="WR_GravarLogSQLResponse" />	    
		    <goto next="#GravarLogSQL_Parse" />
       </if>
        </if>  
	   </block>
		
		<catch event="error.badfetch">
			<script>storeCallflowException(_element, _message, _event, _line, _url)</script>  
			<goto next="#Log_Error_BadFetch" />
		</catch>
		<catch event="error.com.genesyslab.composer.servererror">
			<script>storeCallflowException(_element, _message, _event, _line, _url)</script>  
			<goto next="#Log_Error_ServerError" />
		</catch>
			
	</form>

	<!-- This is the Assign block -->
	<form id="GravarLogSQL_Parse">
		<block>
			<script>
				try {
					
						var response = AppState.objResponseAPI;
					
						__Log('###### Log API GravarLogSQL - response: ' + JSON.stringify(response) + '######');
					
						AppState.io_dados.Estruturante['GravarLogSQL'] = {}
						AppState.io_dados.Estruturante['GravarLogSQL']['codigoRetorno'] = response.detail.codigoRetorno;
						AppState.io_dados.Estruturante['GravarLogSQL']['msgRetorno'] = response.detail.msgRetorno;
					
						__Log('===============================================================================================================');
						__Log('########### AppState.io_dados.Estruturante.GravarLogSQL: ' + JSON.stringify(AppState.io_dados.Estruturante.GravarLogSQL));
						__Log('===============================================================================================================');
					
					} catch (error) {
						__Log(&quot;##### Error(Log API GravarLogSQL): &quot; + error);
					}
			</script>	
			<goto next="#ECMA_Set_Navegacao_Operacoes" />
		</block>
	</form>

	<!-- This is the Log block -->
	<form id="Log_Error_BadFetch">
		<block>
			<log gvp:level="1">
				<value expr="'#######LOG -  Retorno Servico: error.badfetch  #######'"/>
			</log>
    	</block>
    	<block>
    		<goto next="#GravarLogSQL_Parse_Error" />
    	</block>
	</form>

	<!-- This is the Log block -->
	<form id="Log_Error_ServerError">
		<block>
			<log gvp:level="1">
				<value expr="'#######LOG -  Retorno Servico: error.com.genesyslab.composer.servererror #####';"/>
			</log>
    	</block>
    	<block>
    		<goto next="#GravarLogSQL_Parse_Error" />
    	</block>
	</form>

	<!-- This is the Assign block -->
	<form id="GravarLogSQL_Parse_Error">
		<block>
			<script>
				try {
							var response = AppState.objResponseAPI;
							
							__Log('###### Log API GravarLogTrace - response: ' + JSON.stringify(response) + '######');
									
							AppState.io_dados.Estruturante['GravarLogTrace'] = {}
							AppState.io_dados.Estruturante['GravarLogTrace']['codigoRetorno'] = &quot;99&quot;
							AppState.io_dados.Estruturante['GravarLogTrace']['msgRetorno'] = &quot;falha&quot;
							
							__Log('###### AppState.io_dados.Estruturante.GravarLogTrace: ' + JSON.stringify(AppState.io_dados.Estruturante.GravarLogTrace) + '######');
					} catch (error) {
						__Log(&quot;##### Error(GravarLogTrace_Parse): &quot; + error);
					}
			</script>	
			<goto next="#ECMA_Set_Navegacao_Operacoes" />
		</block>
	</form>

	<!-- This is the Assign block -->
	<form id="ECMA_Set_Navegacao_Operacoes">
		<block>
			<script>
				try {
					
					   	var dataAtual = getDataAtual();
					
						AppState.objNavegacao = {
							codigoServico: &quot;LOGSQL&quot;,
							timestampInicio: AppState.VAR_timestampInicio,
							timestampFim: dataAtual.substring(0,23).replace('T',' '), // &quot;9999-12-31 23:59:59.999&quot;
							sequencia: 1,
							status: AppState.objResponseAPI.detail.codigoRetorno,
							chavesPesquisa: [],
							dadosOperacao: [
								{
									Request: AppState.objJsonRequest,
									Response: AppState.objResponseAPI
								}
							]
						}
					
						AppState.io_dados.objSessao.inLogOperacao.push(AppState.objNavegacao);
					
						__Log(&quot;##### objNavegacao: &quot;+ JSON.stringify(AppState.objNavegacao));
					} catch (error) {
						__Log(&quot;##### Error(ECMA_Set_Navegacao_Operacoes): &quot; + error);
					}
			</script>	
			<goto next="#Exit1_Estruturante_GravarLogSQL" />
		</block>
	</form>

</vxml>

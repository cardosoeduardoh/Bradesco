<?xml version="1.0" encoding="utf-8"?>
<vxml version="2.1" xml:lang="pt-BR"
		xmlns="http://www.w3.org/2001/vxml"
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xmlns:gvp="http://www.genesyslab.com/2006/vxml21-extension" application="../src/ComposerRoot.vxml">

	
	<!-- VXML code generated by Composer 8.1.550.08 -->
	<!-- Diagram created by Composer: Composer 8.1.561.16 -->
	<!-- Project version: 8.1.550.08 -->
	<!-- Diagram version: 1.0 CreatedOn:  -->
	<!-- Application Author:  -->
	<!-- Release Mode: false -->

	<!-- Global Scripts includes -->
	<script src="../include/common.js" />
	<script src="../include/ctic.js" />
	<script src="../include/json.js" />
	<script src="../include/DataAccess.js" />

	<!-- Global Vars declarations -->
	<script>
		var AppState = new Object();
		AppState.System = new Object();
		AppState.System.RetainInputTypeVariableDefaultValue = false;
		AppState.CallUUID = session.connection.uuid;
		AppState.ANI = getANI();
		AppState.DNIS = getDNIS();
		AppState.USE_LCASE_USERDATAKEY = initSystemTypeVariable('USE_LCASE_USERDATAKEY',0);
  		
  		if (session.connection.protocol.sip.headers != undefined &amp;&amp;
			    session.connection.protocol.sip.headers['x-genesys-gvp-session-id']){
			AppState.GVPSessionID = session.connection.protocol.sip.headers['x-genesys-gvp-session-id'];
		} else {
			AppState.GVPSessionID = 'undefined';
		}
  			
		
		AppState.ap_url = '';
		AppState.APP_ASR_LANGUAGE = initSystemTypeVariable('APP_ASR_LANGUAGE','pt-BR');
		AppState.APP_LANGUAGE = initSystemTypeVariable('APP_LANGUAGE','pt-BR');
		AppState.COMPOSER_WSSTUBBING = initSystemTypeVariable('COMPOSER_WSSTUBBING','0');
		AppState.EnableFCR = initSystemTypeVariable('EnableFCR',true);
		AppState.EnableReports = initSystemTypeVariable('EnableReports',false);
		AppState.EnableSNMP = initSystemTypeVariable('EnableSNMP',false);
		AppState.GRAMMARFILEDIR = initSystemTypeVariable('GRAMMARFILEDIR','../Resources/Grammars');
		AppState.LAST_EVENT_ELEMENT = initSystemTypeVariable('LAST_EVENT_ELEMENT','undefined');
		AppState.LAST_EVENT_LINE = initSystemTypeVariable('LAST_EVENT_LINE','undefined');
		AppState.LAST_EVENT_MSG = initSystemTypeVariable('LAST_EVENT_MSG','undefined');
		AppState.LAST_EVENT_NAME = initSystemTypeVariable('LAST_EVENT_NAME','undefined');
		AppState.LAST_EVENT_URL = initSystemTypeVariable('LAST_EVENT_URL','undefined');
		AppState.OCS_Record = initSystemTypeVariable('OCS_Record',getCallflowOCSRecord());
		AppState.OCS_RecordURI = initSystemTypeVariable('OCS_RecordURI',getCallflowRecordURI());
		AppState.OCS_URI = initSystemTypeVariable('OCS_URI',getCallflowOCSURI());
		AppState.PREV_APP_ASR_LANGUAGE = initSystemTypeVariable('PREV_APP_ASR_LANGUAGE','undefined');
		AppState.PREV_APP_LANGUAGE = initSystemTypeVariable('PREV_APP_LANGUAGE','undefined');
		AppState.SCRIPTSDIR = initSystemTypeVariable('SCRIPTSDIR','../Scripts');
		AppState.VOXFILEDIR = initSystemTypeVariable('VOXFILEDIR','../Resources/Prompts');
		AppState.ap_destino = '';
		AppState.ap_frases = '';
		AppState.ap_evDesligamento = '';
		AppState.ap_nomeServico = 'ConsultarAnaliseProposta';
		AppState.objJsonRequest = {};
		AppState.objResponseAPI = {};
		AppState.analisePropostas = {};
		AppState.str_URI_base = '';
		AppState.str_URI_final = '';
		AppState.str_auth = '';
		AppState.userAPI = '';
		AppState.Content_Type = '';
		AppState.ipAddress = '';
		AppState.str_dataExpiracao = '';
		AppState.objNavegacao = {};
		AppState.VAR_timestampInicio = '';
		AppState.versao = '';
		AppState.ap_tentativas = 1;
	</script>

		
	<!-- Global Scripts -->
	<script srcexpr="AppState.VOXFILEDIR + '/PromptSwitch.js'" />
	<script srcexpr="AppState.VOXFILEDIR + '/pt-BR/pt-BR.js'" />
	<script>var f = new Format();</script>
	<script srcexpr="AppState.SCRIPTSDIR + '/' + ''+gScriptsPath+'funcoes.js'" />
	<script srcexpr="AppState.SCRIPTSDIR + '/' + ''+gScriptsPath+'funcoesDataHora.js'" />
	<script srcexpr="AppState.SCRIPTSDIR + '/' + 'funcoesMenusPP.js'" />
	<script srcexpr="AppState.SCRIPTSDIR + '/' + 'funcoesFrasesPP.js'" />

	
	<script srcexpr="AppState.VOXFILEDIR + '/pt-BR/customprompts.js'" />
	
	
	<!-- Global Properties declarations -->
	<property name="com.genesyslab.logtoasr" value="false" />   	
	<property name="com.genesyslab.loglevel" value="5" />

	<!-- Metadata information -->
	<meta name="com.genesyslab.studio.resourcePath" content="/Callflows/Servico_ConsultarAnaliseProposta.callflow"/>

	<!-- Global links -->
	<form>	
		<!-- VAR Parent Action Param -->
		<var name="varActionParentId" expr="''"/>
		<var name="io_dados" expr="''"/>
		<block name="paramAssignment">
			<assign name="AppState.io_dados" expr="io_dados"/>
		</block>
		<block name="varAction">
			<if cond="varActionParentId==''">
				<log label="com.genesyslab.var.ActionStart" gvp:cond="AppState.EnableReports">Servico_ConsultarAnaliseProposta</log>
			<else/>
				<log label="com.genesyslab.var.ActionStart" gvp:cond="AppState.EnableReports">Servico_ConsultarAnaliseProposta|parentID=<value expr="varActionParentId"/></log>
			</if>
		</block>
		<block>
			<log expr="'Running Servico_ConsultarAnaliseProposta workflow.'"/>
			<log expr="'Code Generated by Composer: 8.1.550.08.'"/>
			<log expr="'Diagram created/upgraded by Composer: Composer 8.1.561.16.'"/>
			<log expr="'Project version: 8.1.550.08.'"/>
			<log expr="'Diagram version: 1.0 CreatedOn: .'"/>
			<goto next="#Entry1_Servico_ConsultarAnaliseProposta" />
		</block>
	</form>
	<!-- This is the Entry block -->
	<form id="Entry1_Servico_ConsultarAnaliseProposta">
		<block name="Entry">
			<goto next="#LogInicioServico" />
		</block>
	</form>	
    <catch event="connection.disconnect.hangup">
    	<assign name="AppState.LAST_EVENT_ELEMENT" expr="_element"/>
    	<assign name="AppState.LAST_EVENT_MSG" expr="_message"/>
    	<assign name="AppState.LAST_EVENT_NAME" expr="_event"/>
    	<assign name="AppState.LAST_EVENT_LINE" expr="_line"/>
    	<assign name="AppState.LAST_EVENT_URL" expr="_url"/>
		<script>storeCallflowException(_element, _message, _event, _line, _url)</script>  
			<goto next="#Abandono" />
    </catch>

    <catch event=".">
    <return eventexpr="_event" messageexpr="_message"/> 
    </catch>
    

	<!-- This is the Exit block -->
	<form id="Exit1_Servico_ConsultarAnaliseProposta">
		<block>
			<log gvp:level="1" label="com.genesyslab.var.ActionEnd" gvp:cond="AppState.EnableReports">Servico_ConsultarAnaliseProposta|UNKNOWN</log>
			<var name="io_dados" expr="AppState.io_dados"/>
			<return namelist="io_dados"/>
  		</block>
	</form>

	<!-- This is the Log block -->
	<form id="LogInicioServico">
		<block>
			<log gvp:level="1">
				<value expr="'############## Inicio Servico: ' + AppState.ap_nomeServico + '##############'"/>
			</log>
    	</block>
    	<block>
    		<goto next="#ConsultarAnaliseProposta_Monta_URI" />
    	</block>
	</form>

	<!-- This is the Assign block -->
	<form id="ConsultarAnaliseProposta_Monta_URI">
		<block>
			<script>
				try {
					
					   //Timestamp navegacao
						var dataAtual = getDataAtual();
					   	AppState.VAR_timestampInicio = dataAtual.substring(0,23).replace('T',' '); // &quot;9999-12-31 23:59:59.999&quot;
					    AppState.str_auth = AppState.io_dados.Estruturante.AutenticarCanal.token;
						var url_base_mock = AppState.io_dados.opm.mock;
						if (url_base_mock != &quot;&quot; &amp;&amp; url_base_mock != null) {
							AppState.str_URI_final = url_base_mock + &quot;/ConsultarAnaliseProposta&quot;;
						} else {
							AppState.str_URI_final = AppState.io_dados.opm.url_consultarparametros; //ALTERAR
						}
						AppState.str_auth = AppState.io_dados.Estruturante.AutenticarCanal.token;
					 	AppState.str_timeOut = AppState.io_dados.opm.timeout;
					 	AppState.versao =  AppState.io_dados.opm.conectorversao;
					 	
					 	
						//JSON Request
						AppState.objJsonRequest = {};
						AppState.objJsonRequest.mnemonico = &quot;MFLEGSTR&quot;;
						AppState.objJsonRequest.versaoServico = AppState.versao;//&quot;0&quot;;
						AppState.objJsonRequest.timestampRequisicao = &quot;9999-12-31 23:59:59.999&quot;;
						AppState.objJsonRequest.timeoutRequisicao = &quot;60&quot;;
						AppState.objJsonRequest.codigoCentral = &quot;uraCartoes&quot;;
						AppState.objJsonRequest.tipoAtendimento = &quot;1&quot;;
						AppState.objJsonRequest.NSUSessao = &quot;99991231235959999CC&quot;;
						AppState.objJsonRequest.codigoServico = &quot;&quot;;
						AppState.objJsonRequest.sistemaAcionado = &quot;YMCL&quot;;
						AppState.objJsonRequest.codigoTransacao = &quot;CONSULTAR_ANALISE_PROPOSTA&quot;;
						AppState.objJsonRequest.funcaoExecutada = &quot;consulta&quot;;
						AppState.objJsonRequest.areaEnvio = {};
						AppState.objJsonRequest.areaEnvio.areaEnvioTamanho = &quot;9999&quot;;
						AppState.objJsonRequest.areaEnvio.areaEnvioIDPDC = &quot;peclrequest&quot;;
					
						/*
					 	Proposta TX:
					
						16/06/2020 19:19:15 P013 C--- BufferTx(110231)='SELECT A.CPF, A.DATA_PROPOSTA, A.ORG, A.LOGO,
						A.STATUS From TOOLS.pesquisa_status_novo A,(SELECT Max(DATA_PROPOSTA) DATA_PROPOSTA, ORG,
						LOGO From TOOLS.pesquisa_status_novo Where CPF = '7397xxxx204' GROUP BY ORG, LOGO) B Where
						A.DATA_PROPOSTA = b.DATA_PROPOSTA AND A.ORG = B.ORG AND A.LOGO = B.LOGO AND CPF = '7397xxxx204''
					
						16/06/2020 19:19:16 P013 C001 SQLExecuteComplete(110231): RowsAffected:1
					
						16/06/2020 19:19:16 P013 C001 BufferRx(110231)='RowsAffected:1&lt;0&gt;7397xxxx204&lt;0&gt;&lt;D&gt;&lt;A&gt;2019-06-27 15:12:40&lt;0&gt;&lt;D&gt;&lt;A&gt;038&lt;0&gt;&lt;D&gt;&lt;A&gt;022&lt;0&gt;&lt;D&gt;&lt;A&gt;1&lt;0&gt;&lt;D&gt;&lt;A&gt;'	
					
					 	*/
						var dados = AppState.io_dados;
						var TxBuffer = &quot;&quot;;
						TxBuffer = &quot;CONSULTAR_ANALISE_PROPOSTA&quot;;
					 	TxBuffer = TxBuffer + &quot;05&quot;;
					 	TxBuffer = TxBuffer + AppState.io_dados['sNumCartao'];
					 	TxBuffer = TxBuffer + &quot;01&quot;;
					 	TxBuffer = TxBuffer + &quot;0000000000000000000000000000000000000000000000000000&quot;;
					
						AppState.objJsonRequest.areaEnvio.areaEnvioTexto = TxBuffer;
					
						__Log('########### str_URI_final: ' + JSON.stringify(AppState.str_URI_final));
						__Log('########### AppState.str_auth: ' + JSON.stringify(AppState.str_auth));
						__Log('########### objJsonRequest: ' + JSON.stringify(AppState.objJsonRequest));	
						__Log('###########AppState.versao: ' + JSON.stringify(AppState.versao));
							
						
					} catch (error) {
						__Log(&quot;##### Error(ConsultarAnaliseProposta_Setar_Variaveis): &quot; + error);
					}
			</script>	
			<goto next="#WR_ConsultarAnaliseProposta" />
		</block>
	</form>

	<!-- This is the WebRequest block -->
	<form id="WR_ConsultarAnaliseProposta">
	  <block>
		<script>
		    var requestObj = new Object();
			requestObj['WebUrl'] = AppState.str_URI_final;
			requestObj['Protocol'] = 'post';
			requestObj['Enctype'] = 'application/json';
			requestObj['VerifyJSON'] = true;
		    requestObj['JsonContent'] = AppState.objJsonRequest;
			requestObj['AuthenAccess'] = false;
		
		
            requestObj['Timeout'] = '90';
            
			var customHeaders = new Object();
			
			customHeaders['Content-Type'] = AppState.Content_Type;
			customHeaders['Authorization'] = AppState.str_auth;
			requestObj['CustomHeaders'] = customHeaders;
			requestObj['enableProxy']=false;
			requestObj['proxyHost']='';
			requestObj['proxyPort']=80;
			requestObj['proxyUserName']='';
			requestObj['proxyPassword']='';
			requestObj['SSLauthenticationType'] = 'Anonymous';
			requestObj['SSLcertificateAlias'] = '';
			requestObj['SSLKeyStoreLocation'] = '';
			requestObj['SSLcertifcateStoreName'] = '';
			requestObj['SSLkeyAlgorithm'] = 'DSA';
			requestObj['SSLkeyStorePassword'] = '';
			requestObj['SSLprivateKeyPassword'] = '';
		</script>
		<data name="WR_ConsultarAnalisePropostaResponse" enctype="application/json" 
			gvp:contentexpr="requestObj" method="post"
			src="../include/getWebRequestData.jsp" />	    
		<if cond="typeof WR_ConsultarAnalisePropostaResponse.errorMsg == 'undefined'">			
		    <assign name="AppState.objResponseAPI" expr="WR_ConsultarAnalisePropostaResponse" />	    
		    <goto next="#VerRetornoWR" />
		<else/>
		<if cond="WR_ConsultarAnalisePropostaResponse.throwServerException">
        	<throw event="error.com.genesyslab.composer.servererror" messageexpr="WR_ConsultarAnalisePropostaResponse.errorMsg" />
        <else/>			
		    <assign name="AppState.objResponseAPI" expr="WR_ConsultarAnalisePropostaResponse" />	    
		    <goto next="#VerRetornoWR" />
       </if>
        </if>  
	   </block>
		
		<catch event="error.badfetch">
			<script>storeCallflowException(_element, _message, _event, _line, _url)</script>  
			<goto next="#Log_Error_BadFetch" />
		</catch>
		<catch event="error.com.genesyslab.composer.servererror">
			<script>storeCallflowException(_element, _message, _event, _line, _url)</script>  
			<goto next="#Log_Error_ServerError" />
		</catch>
			
	</form>

	<!-- This is the Assign block -->
	<form id="ConsultarAnaliseProposta_Parse">
		<block>
			<script>
				try {
						// a partir deste ponto colocar no ecma
					
					var response = AppState.objResponseAPI;
						
						__Log('###### Log API CREConector Mainframe 1.0 - response: ' + JSON.stringify(response) + '######');
					
						/*
					
						iTotalProposta = SqlExtrairCamposDB_Novo(RespostaRxProposta)
						bExisteAproMais10D = False
						iTotalPropostasValidas = 0
						iTotalAprovadas = 0
						iTotalReprovadas = 0
						iTotalEmAnalise = 0
						For i = 1 To MAX_TOTAL_PROPOSTAS
					    	strRespPropostasA.DetLinha(i).ORG = Space$(3)
					    	strRespPropostasA.DetLinha(i).LOGO = Space$(3)
					    	strRespPropostasA.DetLinha(i).DtSafra = Space$(23)
					    	strRespPropostasR.DetLinha(i).ORG = Space$(3)
					    	strRespPropostasR.DetLinha(i).LOGO = Space$(3)
					    	strRespPropostasR.DetLinha(i).DtSafra = Space$(23)
					    	strRespPropostasEmAna.DetLinha(i).ORG = Space$(3)
					    	strRespPropostasEmAna.DetLinha(i).LOGO = Space$(3)
					    	strRespPropostasEmAna.DetLinha(i).DtSafra = Space$(23)
						Next i
						iRetry = 0
					
						*/
						AppState.analisePropostas = {};
					
						
						if (response.detail.codigoRetorno == '0' ){
							
							AppState.analisePropostas.codigoRetorno = response.detail.codigoRetorno;
							AppState.analisePropostas.msgRetorno = response.detail.msgRetorno;	
							AppState.analisePropostas.areaRespostaTamanho = response.result.areaResposta.areaRespostaTamanho;		
							AppState.analisePropostas.areaRespostaIDPDC = response.result.areaResposta.areaRespostaIDPDC;
							AppState.analisePropostas.timestampInicio = response.detail.timestampInicio;
							AppState.analisePropostas.timestampFim = response.detail.timestampFim;
							AppState.analisePropostas.iTotalProposta = response.result.areaResposta.areaRespostaTexto.DetLinha.length;
							
							//Campos do Servico
					
									
							var listaCartoesAnalise = [];
							var totalCartoes = parseInt(response.result.areaResposta.areaRespostaTexto.DetLinha.length);
							var iTotalAprovadas = 0;
							__Log('-----&gt; TotalCartoes : '+ totalCartoes);
							
							for (var i = 0; i &lt; totalCartoes; i++) {	
								var obj_ListaCartoesAnalise = new Object();
								
								//propostas  
								obj_ListaCartoesAnalise.strData  = response.result.areaResposta.areaRespostaTexto.DetLinha[i].Data; //'formato yyyy-mm-dd hh:mm:ss
								obj_ListaCartoesAnalise.strORG  = response.result.areaResposta.areaRespostaTexto.DetLinha[i].ORG; //desenvolvido sem layout do retorno, verificar a estrutura
								obj_ListaCartoesAnalise.strStatus  = response.result.areaResposta.areaRespostaTexto.DetLinha[i].STATUS;
							    obj_ListaCartoesAnalise.strLOGO  = response.result.areaResposta.areaRespostaTexto.DetLinha[i].LOGO; //desenvolvido sem layout do retorno, verificar a estrutura
								obj_ListaCartoesAnalise.DtSafra  = response.result.areaResposta.areaRespostaTexto.DetLinha[i].DtSafra; //desenvolvido sem layout do retorno, verificar a estrutura
								
								listaCartoesAnalise.push(obj_ListaCartoesAnalise);
									
							}			                           
					                            			
							AppState.analisePropostas.DetLinha = listaCartoesAnalise;
							
							var retornoAnaliseProposta	= verificaPropostasValidas(AppState.io_dados, AppState.analisePropostas.DetLinha);
							//__Log('-----&gt; verificaPropostasValidas retorno funcao : '+ JSON.stringify(retornoAnaliseProposta));
					
							AppState.analisePropostas.strRespPropostasA = retornoAnaliseProposta.strRespPropostasA;
							AppState.analisePropostas.strRespPropostasR = retornoAnaliseProposta.strRespPropostasR;
							AppState.analisePropostas.strRespPropostasEmAna = retornoAnaliseProposta.strRespPropostasEmAna;
							AppState.analisePropostas.iTotalPropostasValidas = retornoAnaliseProposta.strRespPropostasA.iTotalAprovadas + retornoAnaliseProposta.strRespPropostasR.iTotalReprovadas + retornoAnaliseProposta.strRespPropostasEmAna.iTotalEmAnalise; 
							
						
						} else{
							AppState.analisePropostas.codigoRetorno = response.detail.codigoRetorno;
							AppState.analisePropostas.msgRetorno = response.detail.msgRetorno;
						}
							
					
						__Log('===============================================================================================================');
						__Log('########### AppState.analisePropostas: ' + JSON.stringify(AppState.analisePropostas));
						__Log('########### AppState.analisePropostas.codigoRetorno: ' + AppState.analisePropostas.codigoRetorno);
						__Log('===============================================================================================================');
					
						//RN19 - VerificaPropostasValidas 
					
						function verificaPropostasValidas(dados, detLinha) {
							var obj_analisePropostas = new Object();
							var sListaORGsAtd = '';
							var sListaORGsAtd1 = '';
							var sListaORGsAtd2 = '';
							var iNroDiasPropostaValida = '';    
							var sListaORGsAtd = '';
					
					
							for (var i = 0; i &lt; detLinha.length; i++) {
					
								var strORG = detLinha[i].strORG;
								var strLogo = detLinha[i].strLOGO;
								var strStatus = detLinha[i].strStatus;
								var strData = detLinha[i].strData;
								var strSafra = detLinha[i].DtSafra;
					
								__Log('************************************************** Posicao:' + i);
								__Log('-----&gt; strORG : '+ strORG);
								__Log('-----&gt; strLogo : '+ strLogo);
								__Log('-----&gt; strStatus : '+ strStatus);
								__Log('-----&gt; strData : '+ strData);
								__Log('-----&gt; eAtendimento : '+ dados['eAtendimento']);
								
					
								switch (dados['eAtendimento']) {  
									case 'ATD_PL':
										sListaORGsAtd = dados['parametros']['ListaORGsAtdPL'];
									break;
									case 'ATD_MAKRO':
									case 'ATD_HOTLINE_MAKRO':
										sListaORGsAtd = dados['parametros']['ListaORGsAtdMakro'];
									break;
									case 'ATD_DOTZ':
										sListaORGsAtd = dados['parametros']['ListaORGsAtdDotz'];
									break;
									case 'ATD_ANGELONI':
										sListaORGsAtd = dados['parametros']['ListaORGsAtdAngeloni'];
									break;
									case 'ATD_ESKALA':
										sListaORGsAtd = dados['parametros']['ListaORGsAtdEskala'];
									break;
									case 'ATD_MATEUS_CARD':
										sListaORGsAtd = dados['parametros']['ListaORGsAtdMateusCard'];
									break;
									case 'ATD_ELO_CARD':
										sListaORGsAtd = dados['parametros']['ListaORGsAtdEloCard'];
									break;
									case 'ATD_ELO_CONSIGNADO':
										sListaORGsAtd = dados['parametros']['ListaORGsAtdEloConsignado'];
									break;
									case 'ATD_PAGUE_MENOS':
										sListaORGsAtd = dados['parametros']['ListaORGsAtdPagueMenos'];
									break;
									case 'ATD_TNG':
										sListaORGsAtd = dados['parametros']['ListaORGsAtdTNG'];
									break;
									case 'ATD_CVC':
										sListaORGsAtd = dados['parametros']['ListaORGsAtdCVC'];
									break;
									case 'ATD_IBICARD':
										sListaORGsAtd = dados['parametros']['ListaORGsAtdIBICard'];
									break;
									case 'ATD_HOT_LINE_CEA':
										sListaORGsAtd = dados['parametros']['ListaORGsAtdHotLineCEA'];
									break;
									case 'ATD_DEFAULT_7332':
										var aux = dados['parametros']['ListaORGsAtdDefault7332_1'];
										aux = aux + dados['parametros']['ListaORGsAtdDefault7332_2'];
										sListaORGsAtd = aux;
									break;
									default:
										var aux = dados['parametros']['ListaORGsAtdDefault7332_1'];
										aux = aux + dados['parametros']['ListaORGsAtdDefault7332_2'];
										sListaORGsAtd = aux;
									break;
								}
					
								__Log('-----&gt; sListaORGsAtd : '+ sListaORGsAtd); 
								
							    if ((sListaORGsAtd.indexOf(strORG) &gt;= 0 ) || sListaORGsAtd.indexOf('TODOS') &gt;= 0  ){ // 'ORG do atendimento correto
							    	//__Log('---------------------------&gt; Entrou IF sListaORGsAtd : '+ sListaORGsAtd);    	
							    if(strData != '' || strData != undefined  ) {
							    		//__Log('---------------------------&gt; Entrou IF strData : '+ strData);
							    		iNroDiasPropostaValida =  dados['parametros']['NroDiasPropostaValida'];
							    		if (parseInt(iNroDiasPropostaValida) &gt; 0 ){
							    			//__Log('---------------------------&gt; strData : '+ strData.substring(8,10));
							    			if (parseInt(strData.substring(8,10)) &lt;= parseInt(iNroDiasPropostaValida)) {
							    				//__Log('---------------------------&gt; ENTROU strStatus : '+ strStatus);
							    				//__Log('---------------------------&gt; ENTROU strORG : '+ strORG);
					
							    				switch (parseInt(strStatus)) {  
													case 1: //APROVADO
													__Log('---------------------------&gt; ENTROU FLUXO APROVADO : ');
													
													var iTotalAprovadas = 0;
					
													obj_analisePropostas.strRespPropostasA = {};
													obj_analisePropostas.strRespPropostasA.DetLinha = [];
					
													obj_analisePropostas.strRespPropostasA.DetLinha[iTotalAprovadas] = {};							
													obj_analisePropostas.strRespPropostasA.DetLinha[iTotalAprovadas].ORG = strORG;
													obj_analisePropostas.strRespPropostasA.DetLinha[iTotalAprovadas].LOGO = strLogo;
													obj_analisePropostas.strRespPropostasA.DetLinha[iTotalAprovadas].DtSafra = strData;
					
													iTotalAprovadas = iTotalAprovadas + 1;
													obj_analisePropostas.strRespPropostasA.iTotalAprovadas = iTotalAprovadas;
														//__Log('---------------------------&gt;obj_analisePropostas.iTotalAprovadas  : '+ obj_analisePropostas.iTotalAprovadas);
														//__Log('---------------------------&gt;AppState.analisePropostas.strRespPropostasA  : '+ JSON.stringify(obj_analisePropostas.strRespPropostasA));
					
														var data = strData.replace(&quot;-&quot;, &quot;&quot;);
														//__Log('-----&gt; data : '+ data.replace(&quot;-&quot;, &quot;&quot;));
					
							                            if(parseInt(data.replace(&quot;-&quot;, &quot;&quot;)) &gt; 0 ){ ////Abs(DateDiff(&quot;d&quot;, strData, Now)) &gt; 10 Then
							                            	obj_analisePropostas.strRespPropostasA.bExisteAproMais10D = true;
							                            	//__Log('-----&gt; obj_analisePropostas dentro: ' + JSON.stringify(obj_analisePropostas));
							                            }	                                                       
							                            __Log('---------------------------&gt; obj_analisePropostas  : '+ JSON.stringify(obj_analisePropostas));
					
							                            break;
													
													case 2: //REPROVADO
														__Log('---------------------------&gt; ENTROU FLUXO REPROVADO : ');
					
														var iTotalReprovadas = 0;
					
														obj_analisePropostas.strRespPropostasR = {};
														obj_analisePropostas.strRespPropostasR.DetLinha = [];
					
														obj_analisePropostas.strRespPropostasR.DetLinha[iTotalReprovadas] = {};							
														obj_analisePropostas.strRespPropostasR.DetLinha[iTotalReprovadas].ORG = strORG;
														obj_analisePropostas.strRespPropostasR.DetLinha[iTotalReprovadas].LOGO = strLogo;
														obj_analisePropostas.strRespPropostasR.DetLinha[iTotalReprovadas].DtSafra = strData;
					
														iTotalReprovadas = iTotalReprovadas + 1;
														obj_analisePropostas.strRespPropostasR.iTotalReprovadas = iTotalReprovadas;
														__Log('---------------------------&gt; obj_analisePropostas  : '+ JSON.stringify(obj_analisePropostas));
														break;
					
													case 3: //EM ANALISE
														__Log('---------------------------&gt; ENTROU FLUXO EM ANALISE : ');
					
														var iTotalEmAnalise = 0;
					
														obj_analisePropostas.strRespPropostasEmAna = {};
														obj_analisePropostas.strRespPropostasEmAna.DetLinha = [];
					
														obj_analisePropostas.strRespPropostasEmAna.DetLinha[iTotalEmAnalise] = {};							
														obj_analisePropostas.strRespPropostasEmAna.DetLinha[iTotalEmAnalise].ORG = strORG;
														obj_analisePropostas.strRespPropostasEmAna.DetLinha[iTotalEmAnalise].LOGO = strLogo;
														obj_analisePropostas.strRespPropostasEmAna.DetLinha[iTotalEmAnalise].DtSafra = strData;
					
														iTotalEmAnalise = iTotalEmAnalise + 1;
														obj_analisePropostas.strRespPropostasEmAna.iTotalEmAnalise = iTotalEmAnalise;
														__Log('---------------------------&gt;obj_analisePropostas  : '+ JSON.stringify(obj_analisePropostas));
													break;	
					
													default: //erro
													break;
												}
											}
										}
									}  
								} 
							}
					
							return obj_analisePropostas;
					
						}
					   
					 //__Log('-----&gt; diferencaDias : '+ diferencaDias('20220810', '2'));  
					   	 
					 function diferencaDias(dt, formato) {
					
						var hoje = new Date();
						var xhoje = new Date(hoje.getFullYear(), hoje.getMonth(), hoje.getDate(), 0, 0, 0);
						var dataX;
						// formato: 1 - nacional, 2 - internacional
						if (formato == 2) {
							dataX = getDateFromStringInternational(dt);
						} else {
							dataX = getDateFromString(dt);
						}
					
						var dif = Date.UTC(dataX.getYear(), dataX.getMonth(), dataX.getDate(), 0, 0, 0) -
							Date.UTC(xhoje.getYear(), xhoje.getMonth(), xhoje.getDate(), 0, 0, 0);
					
						return (dif / 1000 / 60 / 60 / 24);
					
					}     
					
					   
					/**
					 * Funcao getDateFromString(dt)
					 * 
					 * Formato: retorna data de entrada no formato String DDMMAA ou DDMMAAAA em Date.
					 * @param dt
					 * @returns {Date}
					 *
					 **/
					function getDateFromString(dt) {
					
						var dia = dt.substr(0, 2);
						var mes = dt.substr(2, 2);
						var ano = dt.substr(4);
					
						mes = parseInt(mes, 10) - 1;
					
						if (ano.length == 2) {
							ano = &quot;20&quot; + ano;
						}
					
						var data = new Date(ano, mes, dia);
						return data;
					}
					
					function getDateFromStringInternational(dt) {
					
						var dia = 0;
						var mes = 0;
						var ano = 0;
					
						if (dt.length == 6) {
							dia = dt.substr(4);
							mes = dt.substr(2, 2);
							ano = &quot;20&quot; + dt.substr(0, 2);
						} else {
							dia = dt.substr(6);
							mes = dt.substr(4, 2);
							ano = dt.substr(0, 4);
						}
					
						mes = parseInt(mes, 10) - 1;
						var data = new Date(ano, mes, dia);
						return data;
					}
					
					/*
					 * formato data ddMMyyyyhhmmss ou ex: 2016-01-12T18:00:00
					 */
					function getFullDateFromStringInternational(dt) {
					
						dt = replaceAll(dt, &quot;-&quot;, &quot;&quot;);
						dt = replaceAll(dt, &quot; &quot;, &quot;&quot;);
						dt = replaceAll(dt, &quot;T&quot;, &quot;&quot;);
						dt = replaceAll(dt, &quot;:&quot;, &quot;&quot;);
					
						var dia = dt.substr(6, 2);
						var mes = dt.substr(4, 2);
						var ano = dt.substr(0, 4);
						var hora = dt.substr(8, 2);
						var min = dt.substr(10, 2);
						var seg = dt.substr(12, 2);
					
						mes = parseInt(mes, 10) - 1;
					
						if (ano.length == 2) {
							ano = &quot;20&quot; + ano;
						}
					
						var data = new Date(ano, mes, dia, hora, min, seg);
						return data;
					}
					
					
						
					
					} catch (error) {
						__Log(&quot;##### Error(API CREConector Mainframe 1.0): &quot; + error);
					}
			</script>	
			<goto next="#addDados_ConsultarAnaliseProposta" />
		</block>
	</form>

	<!-- This is the Log block -->
	<form id="Log_Error_BadFetch">
		<block>
			<log gvp:level="1">
				<value expr="'#######LOG -  Retorno Servico: error.badfetch  #######'"/>
			</log>
    	</block>
    	<block>
    		<goto next="#ConsultarAnaliseProposta_Parse_Error" />
    	</block>
	</form>

	<!-- This is the Log block -->
	<form id="Log_Error_ServerError">
		<block>
			<log gvp:level="1">
				<value expr="'#######LOG -  Retorno Servico: error.com.genesyslab.composer.servererror #####';"/>
			</log>
    	</block>
    	<block>
    		<goto next="#ConsultarAnaliseProposta_Parse_Error" />
    	</block>
	</form>

	<!-- This is the Assign block -->
	<form id="ConsultarAnaliseProposta_Parse_Error">
		<block>
			<script>
				try {
							var response = AppState.objResponseAPI;
							
							__Log('###### Log API CREConector Mainframe 1.0 - response: ' + JSON.stringify(response) + '######');
							
							AppState.AplConsultarAnalisePropostaRX = {};
							AppState.AplConsultarAnalisePropostaRX.codigoRetorno = '99';
							AppState.AplConsultarAnalisePropostaRX.msgRetorno = 'falha';
							
					} catch (error) {
						__Log(&quot;##### Error( CREConector Mainframe 1.0): &quot; + error);
					}
			</script>	
			<goto next="#addDados_ConsultarAnaliseProposta" />
		</block>
	</form>

	<!-- This is the Assign block -->
	<form id="addDados_ConsultarAnaliseProposta">
		<block>
			
			<assign name="AppState.io_dados" expr="adicionaDados(AppState.io_dados, 'analisePropostas', AppState.analisePropostas)" />				
			<goto next="#ECMA_Set_Navegacao_Operacoes" />
		</block>
	</form>

	<!-- This is the Assign block -->
	<form id="ECMA_Set_Navegacao_Operacoes">
		<block>
			<script>
				try {
					
					   	var dataAtual = getDataAtual();
					
						AppState.objNavegacao = {
							codigoServico: AppState.ap_nomeServico,
							timestampInicio: AppState.VAR_timestampInicio,
							timestampFim: dataAtual.substring(0,23).replace('T',' '), // &quot;9999-12-31 23:59:59.999&quot;
							sequencia: 1,
							status: AppState.objResponseAPI.detail.codigoRetorno,
							chavesPesquisa: [],
							dadosOperacao: [
								{
									Request: AppState.objJsonRequest,
									Response: AppState.objResponseAPI
								}
							]
						}
					
						__Log(&quot;##### objNavegacao: &quot;+ JSON.stringify(AppState.objNavegacao));
					} catch (error) {
						__Log(&quot;##### Error(ECMA_Set_Navegacao_Operacoes): &quot; + error);
					}
			</script>	
			<goto next="#Exit1_Servico_ConsultarAnaliseProposta" />
		</block>
	</form>

	<!-- This is the Subdialog block -->
	<form id="Abandono">

		<subdialog name="AbandonoSubdialog" fetchhint="prefetch"  src="../../YUII/src-gen/Abandono.vxml">
    		<param name="varActionParentId" expr="'Servico_ConsultarAnaliseProposta'"/>
			<param name="io_dados" expr="AppState.io_dados" />
			<filled>
				<if cond="AbandonoSubdialog.io_dados != 'undefined'">
  					<assign name="AppState.io_dados" expr="AbandonoSubdialog.io_dados" /> 
  				</if>
				<goto next="#FalaDesliga" />
			</filled>
		</subdialog>
		
	</form>

	<!-- This is the Subdialog block -->
	<form id="FalaDesliga">

		<subdialog name="FalaDesligaSubdialog" fetchhint="prefetch"  src="../../YUII/src-gen/FalaDesliga.vxml">
    		<param name="varActionParentId" expr="'Servico_ConsultarAnaliseProposta'"/>
			<param name="io_dados" expr="AppState.io_dados" />
			<filled>
				<goto next="#Exit1_Servico_ConsultarAnaliseProposta" />
			</filled>
		</subdialog>
		
	</form>

	<!-- This is the Branching block -->
	<form id="VerRetornoWR">
		<block>
			<if cond="!(AppState.objResponseAPI.hasOwnProperty(&quot;errorMsg&quot;) &amp;&amp; AppState.objResponseAPI.errorMsg == &quot;Unauthorized&quot;)">
				
				<!-- This is the OutLink -->
				<goto next="#ConsultarAnaliseProposta_Parse" />
			</if>
			<goto next="#ValidaTentativas_UR76" />
		</block>
	</form>

	<!-- This is the Subdialog block -->
	<form id="AutenticarCanal">

		<subdialog name="AutenticarCanalSubdialog" fetchhint="prefetch"  src="../../YUII/src-gen/Estruturante_AutenticarCanal.vxml">
    		<param name="varActionParentId" expr="'Servico_ConsultarAnaliseProposta'"/>
			<param name="io_dados" expr="AppState.io_dados" />
			<filled>
				<if cond="AutenticarCanalSubdialog.io_dados != 'undefined'">
  					<assign name="AppState.io_dados" expr="AutenticarCanalSubdialog.io_dados" /> 
  				</if>
				<goto next="#ConsultarAnaliseProposta_Monta_URI" />
			</filled>
		</subdialog>
		
	</form>

	<!-- This is the Branching block -->
	<form id="ValidaTentativas_UR76">
		<block>
			<log gvp:level="1">
				<value expr="'######### AppState.ap_tentativas : ' + AppState.ap_tentativas"/>
			</log>
    	</block>
		<block>
			<if cond="AppState.ap_tentativas &gt; 2">
				
				<!-- Post Action -->
				<script>try{
				AppState.ap_tentativas +1
				}
				catch(err){}
				
				</script>
				
				<!-- This is the OutLink -->
				<goto next="#ConsultarAnaliseProposta_Parse_Error" />
			</if>
			<goto next="#AutenticarCanal" />
		</block>
	</form>

</vxml>
